import mongoose from "mongoose";
import dotenv from "dotenv";
import User from "../models/User.js";
import Class from "../models/Class.js";

dotenv.config({ path: "../.env" });

const MONGODB_URI = process.env.MONGODB_URI;

async function checkTrainerClasses() {
  try {
    await mongoose.connect(MONGODB_URI, {
      useNewUrlParser: true,
      useUnifiedTopology: true,
    });
    
    console.log("‚úÖ Connected to MongoDB");
    
    // L·∫•y t·∫•t c·∫£ users c√≥ role l√† trainer
    const trainers = await User.find({ role: 'trainer' });
    console.log(`\nüìã Found ${trainers.length} trainers in database:`);
    
    for (const trainer of trainers) {
      console.log(`\nüë®‚Äçüè´ Trainer: ${trainer.fullName} (${trainer.email})`);
      
      // T√¨m c√°c l·ªõp h·ªçc ƒë∆∞·ª£c g√°n cho trainer n√†y
      const assignedClasses = await Class.find({ 
        instructorName: trainer.fullName 
      });
      
      console.log(`   üìö Assigned classes: ${assignedClasses.length}`);
      
      if (assignedClasses.length > 0) {
        assignedClasses.forEach(cls => {
          console.log(`      - ${cls.className} (${cls.serviceName || 'No service'})`);
          console.log(`        Schedule: ${cls.schedule?.join(', ') || 'No schedule'}`);
          console.log(`        Status: ${cls.status || 'No status'}`);
        });
      } else {
        console.log(`      ‚ùå No classes assigned to ${trainer.fullName}`);
      }
    }
    
    // Ki·ªÉm tra t·∫•t c·∫£ l·ªõp h·ªçc c√≥ instructorName
    console.log(`\nüìö All classes with instructorName:`);
    const allClasses = await Class.find({ instructorName: { $exists: true, $ne: null } });
    
    console.log(`Found ${allClasses.length} classes with instructorName:`);
    allClasses.forEach(cls => {
      console.log(`  - ${cls.className}: instructor="${cls.instructorName}"`);
    });
    
  } catch (error) {
    console.error("‚ùå Error:", error);
  } finally {
    await mongoose.disconnect();
    console.log("\n‚úÖ Disconnected from MongoDB");
  }
}

checkTrainerClasses();