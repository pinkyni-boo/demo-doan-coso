// Test script ƒë·ªÉ t·∫°o d·ªØ li·ªáu m·∫´u cho Room Management
import mongoose from "mongoose";
import Room from "../models/Room.js";
import dotenv from "dotenv";

dotenv.config({ path: "./backend/.env" });

const sampleRooms = [
  {
    roomName: "Ph√≤ng Cardio 1",
    roomCode: "CARD-01",
    location: "T·∫ßng 1, Khu A",
    capacity: 25,
    area: 80.5,
    status: "active",
    facilities: [
      "ƒêi·ªÅu h√≤a",
      "G∆∞∆°ng l·ªõn",
      "H·ªá th·ªëng √¢m thanh",
      "Wifi",
      "N∆∞·ªõc u·ªëng mi·ªÖn ph√≠",
    ],
    description: "Ph√≤ng cardio ch√≠nh v·ªõi ƒë·∫ßy ƒë·ªß m√°y ch·∫°y b·ªô v√† xe ƒë·∫°p t·∫≠p",
    currentCondition: "good",
  },
  {
    roomName: "Ph√≤ng T·∫≠p T·∫°",
    roomCode: "WEIGHT-01",
    location: "T·∫ßng 2, Khu A",
    capacity: 30,
    area: 120.0,
    status: "active",
    facilities: [
      "ƒêi·ªÅu h√≤a",
      "G∆∞∆°ng to√†n b·ªô t∆∞·ªùng",
      "S√†n cao su chuy√™n d·ª•ng",
      "H·ªá th·ªëng th√¥ng gi√≥",
    ],
    description: "Ph√≤ng t·∫≠p t·∫° v·ªõi ƒë·∫ßy ƒë·ªß thi·∫øt b·ªã t·ª± do v√† m√°y t·∫≠p",
    currentCondition: "good",
  },
  {
    roomName: "Ph√≤ng Yoga & Pilates",
    roomCode: "YOGA-01",
    location: "T·∫ßng 3, Khu B",
    capacity: 20,
    area: 60.0,
    status: "active",
    facilities: [
      "√Ånh s√°ng t·ª± nhi√™n",
      "S√†n g·ªó",
      "G∆∞∆°ng",
      "Loa Bluetooth",
      "K·ªá ƒë·ª±ng ƒë·ªì",
    ],
    description: "Ph√≤ng t·∫≠p yoga v√† pilates v·ªõi kh√¥ng gian y√™n tƒ©nh",
    currentCondition: "excellent",
  },
  {
    roomName: "Ph√≤ng Functional Training",
    roomCode: "FUNC-01",
    location: "T·∫ßng 1, Khu B",
    capacity: 15,
    area: 50.0,
    status: "active",
    facilities: [
      "TRX",
      "Kettlebell",
      "Battle rope",
      "Medicine ball",
      "Plyometric boxes",
    ],
    description: "Ph√≤ng t·∫≠p functional training v·ªõi thi·∫øt b·ªã ƒëa d·∫°ng",
    currentCondition: "good",
  },
  {
    roomName: "Ph√≤ng Cardio 2",
    roomCode: "CARD-02",
    location: "T·∫ßng 2, Khu B",
    capacity: 20,
    area: 70.0,
    status: "maintenance",
    facilities: ["ƒêi·ªÅu h√≤a", "G∆∞∆°ng", "TV LCD", "Wifi"],
    description: "Ph√≤ng cardio ph·ª•, hi·ªán ƒëang b·∫£o tr√¨ h·ªá th·ªëng ƒëi·ªÅu h√≤a",
    currentCondition: "needs_repair",
  },
  {
    roomName: "Ph√≤ng Group Class",
    roomCode: "GROUP-01",
    location: "T·∫ßng 3, Khu A",
    capacity: 35,
    area: 100.0,
    status: "active",
    facilities: [
      "S√†n nh√∫n",
      "H·ªá th·ªëng √¢m thanh chuy√™n nghi·ªáp",
      "M√°y chi·∫øu",
      "ƒêi·ªÅu h√≤a m·∫°nh",
    ],
    description: "Ph√≤ng l·ªõp h·ªçc nh√≥m v·ªõi s·ª©c ch·ª©a l·ªõn",
    currentCondition: "good",
  },
];

async function createSampleRooms() {
  try {
    console.log("üîÑ Connecting to MongoDB...");
    await mongoose.connect(process.env.MONGODB_URI, {
      useNewUrlParser: true,
      useUnifiedTopology: true,
    });
    console.log("‚úÖ Connected to MongoDB");

    // X√≥a d·ªØ li·ªáu c≈©
    console.log("üóëÔ∏è Clearing existing room data...");
    await Room.deleteMany({});

    // T·∫°o d·ªØ li·ªáu m·∫´u
    console.log("üìù Creating sample rooms...");
    const createdRooms = await Room.insertMany(sampleRooms);

    console.log(`‚úÖ Successfully created ${createdRooms.length} sample rooms:`);
    createdRooms.forEach((room) => {
      console.log(`   - ${room.roomName} (${room.roomCode}) - ${room.status}`);
    });

    console.log("\nüìä Room Statistics:");
    const stats = {
      total: await Room.countDocuments(),
      active: await Room.countDocuments({ status: "active" }),
      maintenance: await Room.countDocuments({ status: "maintenance" }),
      inactive: await Room.countDocuments({ status: "inactive" }),
    };

    console.log(`   Total: ${stats.total}`);
    console.log(`   Active: ${stats.active}`);
    console.log(`   Maintenance: ${stats.maintenance}`);
    console.log(`   Inactive: ${stats.inactive}`);
  } catch (error) {
    console.error("‚ùå Error creating sample data:", error);
  } finally {
    console.log("üîå Disconnecting from MongoDB...");
    await mongoose.disconnect();
    console.log("‚úÖ Disconnected");
    process.exit(0);
  }
}

// Ch·∫°y script
createSampleRooms();
