import mongoose from "mongoose";
import Room from "../models/Room.js";
import dotenv from "dotenv";

// Load environment variables
dotenv.config({ path: "./backend/.env" });

const createSampleRooms = async () => {
  try {
    console.log("üîÑ Connecting to MongoDB...");
    await mongoose.connect(process.env.MONGODB_URI);
    console.log("‚úÖ Connected to MongoDB");

    // X√≥a d·ªØ li·ªáu c≈©
    console.log("üóëÔ∏è Clearing existing rooms...");
    await Room.deleteMany({});

    // T·∫°o d·ªØ li·ªáu m·∫´u
    const sampleRooms = [
      {
        roomName: "Ph√≤ng Cardio 1",
        roomCode: "CARD-01",
        location: "T·∫ßng 1, Khu A",
        capacity: 25,
        area: 80.5,
        status: "active",
        facilities: ["ƒêi·ªÅu h√≤a", "G∆∞∆°ng l·ªõn", "H·ªá th·ªëng √¢m thanh", "Wifi"],
        description: "Ph√≤ng cardio ch√≠nh v·ªõi ƒë·∫ßy ƒë·ªß m√°y ch·∫°y b·ªô v√† xe ƒë·∫°p t·∫≠p",
        currentCondition: "good",
      },
      {
        roomName: "Ph√≤ng T·∫≠p T·∫°",
        roomCode: "WEIGHT-01",
        location: "T·∫ßng 2, Khu A",
        capacity: 30,
        area: 120.0,
        status: "active",
        facilities: [
          "ƒêi·ªÅu h√≤a",
          "G∆∞∆°ng to√†n b·ªô t∆∞·ªùng",
          "S√†n cao su chuy√™n d·ª•ng",
        ],
        description: "Ph√≤ng t·∫≠p t·∫° v·ªõi ƒë·∫ßy ƒë·ªß thi·∫øt b·ªã t·ª± do v√† m√°y t·∫≠p",
        currentCondition: "good",
      },
      {
        roomName: "Ph√≤ng Yoga",
        roomCode: "YOGA-01",
        location: "T·∫ßng 3, Khu B",
        capacity: 20,
        area: 60.0,
        status: "active",
        facilities: ["√Ånh s√°ng t·ª± nhi√™n", "S√†n g·ªó", "G∆∞∆°ng", "Loa Bluetooth"],
        description: "Ph√≤ng t·∫≠p yoga v·ªõi kh√¥ng gian y√™n tƒ©nh",
        currentCondition: "excellent",
      },
    ];

    console.log("üìù Creating sample rooms...");
    const createdRooms = await Room.create(sampleRooms);

    console.log(`‚úÖ Successfully created ${createdRooms.length} rooms:`);
    createdRooms.forEach((room) => {
      console.log(`   - ${room.roomName} (${room.roomCode})`);
    });
  } catch (error) {
    console.error("‚ùå Error creating sample rooms:", error);
  } finally {
    await mongoose.disconnect();
    console.log("üîå Disconnected from MongoDB");
  }
};

// Ch·∫°y ngay khi import
createSampleRooms();
